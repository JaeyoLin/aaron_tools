{"version":3,"sources":["utils/functions.js","components/Tools.js","App.js","serviceWorker.js","index.js"],"names":["letterMapping","Map","citizenMultiplier","checkPid","pid","type","first","nums","get","toUpperCase","map","value","i","reduce","a","b","result","msg","split","prev","element","checkNumber","toString","substring","length","keys","genders","Array","times","secondLetter","genRestNums","restNum","forEach","v","push","Math","floor","random","generateCitizenId","key","firstNum","id","generateForeignerId","firstkey","firstNumber","secKey","secNumber","substr","restNums","checkId","Tools","useState","ids","setIds","livingIds","setLivingIds","useEffect","handleRandom","tmpIds","tmpLivingIds","j","Button","variant","color","onClick","livingId","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","classes","useTheme","React","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98c5379c.chunk.js","sourcesContent":["\n// 身分證字號英文字首, 拘留證號 編號規則\nconst letterMapping = new Map([\n  ['A', '10'],\n  ['B', '11'],\n  ['C', '12'],\n  ['D', '13'],\n  ['E', '14'],\n  ['F', '15'],\n  ['G', '16'],\n  ['H', '17'],\n  ['I', '34'],\n  ['J', '18'],\n  ['K', '19'],\n  ['M', '21'],\n  ['N', '22'],\n  ['O', '35'],\n  ['P', '23'],\n  ['Q', '24'],\n  ['T', '27'],\n  ['U', '28'],\n  ['V', '29'],\n  ['W', '32'],\n  ['X', '30'],\n  ['Z', '33'],\n  ['L', '20'],\n  ['R', '25'],\n  ['S', '26'],\n  ['Y', '31']\n]);\n\n// 本國人 - 驗證規則相乘的數\nconst citizenMultiplier = [1, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1];\n\n// 外國人 - 驗證規則相乘的數\nconst foreignerMultiplier = 1987654321;\n\n/**\n * checkPid\n * 檢查號碼是否正確\n * \n * @param {string} pid - id\n * @param {number} type - 0: 身分證, 1: 居留證\n */\nconst checkPid = (pid, type) => {\n  // 長度要為10\n  // if (pid.length !== 10) return {result: false, msg: '身分證字號長度不正確'};\n\n  // 開頭第一個為英文字母, 後為9個阿拉伯數字, 第一個數字拿來區分性別，男性為1、女性為2\n  // const re = /^[A-Za-z][12]\\d{8}/;\n  // if (!re.test(pid)) return {result: false, msg: '身分證格式錯誤'};\n\n  // 驗證規則\n  const [first, ...nums] = [...pid];\n\n  if (type === 0) {\n    const source = [...letterMapping.get(first.toUpperCase()), ...nums]\n      .map((value, i) => value * citizenMultiplier[i])\n      .reduce((a, b) => a + b, 0);\n  \n    if (source % 10 !== 0) {\n      return { result: false, msg: '驗證失敗' };\n    };\n  } else {\n    const source = pid * foreignerMultiplier;\n    const tmp = (\"\"+source).split(\"\");\n    const result = tmp.reduce((prev, element) => {\n      return (prev * 1) + (element * 1);\n    }, 0);\n\n    let checkNumber = 10 - (1 * result.toString().substring(result.toString().length, 1));\n    if (checkNumber.toString().length === 2) {\n      checkNumber = 1 * checkNumber.toString().substring(checkNumber.toString().length, 1);\n    }\n    if (1 * pid.toString().substring(10) !== checkNumber) {\n      // return { result: false, msg: '驗證失敗' };\n    }\n  }\n\n  return {result: true};\n};\n\nconst keys = [...letterMapping.keys()];\n\n// 身分證\nconst genders = [1, 2]; // 身分證字號 第二碼\nconst nums = [...Array(10).keys()];\nconst times = [...Array(8).keys()];\n\n// 居留證\nconst secondLetter = ['A', 'B', 'C', 'D']; // 居留證號第二碼\n\nconst genRestNums = () => {\n  let restNum = [];\n  times.forEach(v => {\n    restNum.push(nums[Math.floor(Math.random() * nums.length)]); \n  });\n\n  return restNum.reduce((a, b) => a.toString() + b.toString(), '');\n};\n\n/**\n * generateCitizenId\n * 產生身分證字號\n * \n */\nexport const generateCitizenId = () => {\n  // 取得第一碼\n  const key = keys[Math.floor(Math.random() * keys.length)];\n\n  // 取得第二碼\n  const firstNum = genders[Math.floor(Math.random() * genders.length)];\n\n  const id = `${key}${firstNum}${genRestNums()}`;\n  // console.log('id', id);\n  const { result } = checkPid(id, 0);\n  return result ? id : generateCitizenId();\n};\n\n/** \n * generateForeignerId\n * 產生居留證號\n * \n */\nexport const generateForeignerId = () => {\n  // 取得第一碼\n  const firstkey = keys[Math.floor(Math.random() * keys.length)];\n\n  // 第一碼轉數字\n  const firstNumber = letterMapping.get(firstkey.toUpperCase());\n\n  // 取得第二碼\n  const secKey = secondLetter[Math.floor(Math.random() * secondLetter.length)];\n\n  // 第二碼轉數字\n  let secNumber = letterMapping.get(secKey.toUpperCase());\n  // console.log('1', secNumber);\n  secNumber = secNumber.toString().substr(1, 1);\n  // console.log('2', secNumber);\n\n  const restNums = genRestNums();\n\n  const id = `${firstkey}${secKey}${restNums}`;\n  const checkId = `${firstNumber}${secNumber}${restNums}`;\n\n  const { result } = checkPid(checkId, 1);\n  return result ? id : generateForeignerId();\n}\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  generateCitizenId,\n  generateForeignerId,\n} from '../utils/functions';\n\n// 一次產生幾組\nconst randomCount = 5;\n\nconst Tools = () => {\n  const [ids, setIds] = useState([]);\n  const [livingIds, setLivingIds] = useState([]);\n\n  useEffect(() => {\n    handleRandom();\n  }, []);\n\n  const handleRandom = () => {\n    const tmpIds = [];\n    for (let i = 1; i <= randomCount; i += 1) {\n      tmpIds.push(generateCitizenId());\n    }\n\n    const tmpLivingIds = [];\n    for (let j = 1; j <= randomCount; j += 1) {\n      tmpLivingIds.push(generateForeignerId());\n    }\n\n    setIds(tmpIds);\n    setLivingIds(tmpLivingIds);\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleRandom}>\n        Random\n      </Button>\n      <p>身分證字號</p>\n      <ul>\n        {\n          ids.map(id => <li>{id}</li>)\n        }\n      </ul>\n      <p>拘留證號</p>\n      <ul>\n        {\n          livingIds.map(livingId => <li>{livingId}</li>)\n        }\n      </ul>\n    </>\n  );\n}\n\nexport default Tools;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n// import Container from '@material-ui/core/Container';\n// import Button from '@material-ui/core/Button';\n\nimport Tools from './components/Tools';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Aaron Tools\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key=\"Tools\">\n            <ListItemIcon><AssignmentIndIcon /></ListItemIcon>\n            <ListItemText primary=\"Tools\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Tools />\n      </main>\n    </div>\n  );\n}\n\nexport default  App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}